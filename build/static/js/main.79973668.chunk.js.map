{"version":3,"sources":["redux/auth/auth-selectors.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-operations.js","redux/auth/auth-actions.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","routes.js","components/UserMenu/Navigation.js","image/icons-user-no-avatar.png","components/UserMenu/UserMenu.js","components/UserMenu/AuthNav.js","components/UserMenu/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/store.js","index.js"],"names":["getIsAuthenticated","state","auth","isLogedIn","getUserEmail","user","email","initialUserState","name","createReducer","registerSuccess","_","payload","loginSuccess","logoutSuccess","__","getCurrentUserSuccess","token","setError","error","registerError","loginError","logoutError","getCurrentUserError","combineReducers","axios","defaults","baseURL","headers","common","Authorization","signup","credentials","dispatch","a","registerRequest","post","response","data","message","login","loginRequest","logout","logoutRequest","getCurrentUser","getState","persistedToken","getCurrentUserRequest","get","items","fetchContactSuccess","addContactSuccess","deleteContactSuccess","filter","item","id","changeFilter","loading","fetchContactRequest","fetchContactError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","fetchContacts","addContact","number","contact","then","catch","deleteContact","contactID","delete","createAction","getItems","contacts","getFilterValue","getFilteredContactList","createSelector","normalizedFilter","toLowerCase","includes","sort","b","localeCompare","Navigation","isAuthenticated","useSelector","className","exact","to","routes","activeClassName","UserMenu","useDispatch","onLogout","useCallback","src","noAvatar","alt","width","type","onClick","AuthNav","AppBar","connect","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","ContactsView","LoginView","RegisterView","App","useEffect","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","blacklist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79973668.chunk.js","sourcesContent":["export const getIsAuthenticated = state => !!state.auth.isLogedIn;\r\n\r\nexport const getUserEmail = state => state.auth.user.email;\r\n","  \r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  /* registerRequest, */\r\n  registerSuccess,\r\n  registerError,\r\n  /* loginRequest, */\r\n  loginSuccess,\r\n  loginError,\r\n  /* logoutRequest, */\r\n  logoutSuccess,\r\n  logoutError,\r\n  /* getCurrentUserRequest, */\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst initialUserState = {\r\n    name: null,\r\n    email: null\r\n};\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: (_, __) => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: setError,\r\n  [loginError]: setError,\r\n  [logoutError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\n\r\nconst isLogedIn = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [logoutError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isLogedIn,\r\n  token,\r\n  error,\r\n});","import axios from 'axios';\r\n\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\n\r\nexport const token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const signup = credentials => async dispatch => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nexport const login = credentials => async dispatch => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(item => item.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,    \r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  /* changeFilter */\r\n} from './contacts-actions';\r\n\r\n/* axios.defaults.baseURL = 'http://localhost:3001'; */\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest);\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error.message));\r\n  }\r\n};\r\n\r\nexport const addContact = ({ name, number }) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nexport const deleteContact = contactID => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactID}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactID)))\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerRequest = createAction('auth/registerRequest');\r\nexport const registerSuccess = createAction('auth/registerSuccess');\r\nexport const registerError = createAction('auth/registerError');\r\n\r\nexport const loginRequest = createAction('auth/loginRequest');\r\nexport const loginSuccess = createAction('auth/loginSuccess');\r\nexport const loginError = createAction('auth/loginError');\r\n\r\nexport const logoutRequest = createAction('auth/logoutRequest');\r\nexport const logoutSuccess = createAction('auth/logoutSuccess');\r\nexport const logoutError = createAction('auth/logoutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getItems = state => state.contacts.items;\r\n\r\nexport const getFilterValue = state => state.contacts.filter;\r\n\r\nexport const getLoadingItems = state => state.contacts.loading;\r\n\r\n\r\nexport const getFilteredContactList = createSelector(\r\n  [getItems, getFilterValue],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts\r\n      .filter(({ name }) => name.toLowerCase().includes(normalizedFilter))\r\n      .sort((a, b) => a.name.localeCompare(b.name));\r\n  },\r\n);","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');","export default {\r\n  home: '/',\r\n  contacts: '/contacts',\r\n  login: '/login',\r\n  register: '/register',\r\n};","import { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nimport './UserMenu.css'\r\n\r\nexport default function Navigation() {\r\n    const isAuthenticated = useSelector(getIsAuthenticated)\r\n    return (\r\n        <ul className=\"navigation\">\r\n            <li> <NavLink\r\n                    exact to={routes.home}\r\n                    className=\"NavLink\"\r\n                    activeClassName=\"NavLink--active\"\r\n                >\r\n                    Home\r\n                </NavLink>\r\n            </li>\r\n            \r\n            {isAuthenticated && (\r\n                <li> <NavLink\r\n                        to={routes.contacts}\r\n                        className=\"NavLink\"\r\n                        activeClassName=\"NavLink--active\"\r\n                    >\r\n                        Contacts\r\n                    </NavLink>\r\n                </li>\r\n            ) }\r\n\r\n\r\n        </ul>\r\n    );   \r\n}","export default __webpack_public_path__ + \"static/media/icons-user-no-avatar.6c53c0a1.png\";","import { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getUserEmail, logout } from '../../redux/auth';\r\nimport noAvatar from '../../image/icons-user-no-avatar.png';\r\n\r\nimport './UserMenu.css'\r\n\r\n\r\nexport default function UserMenu() {\r\n\r\n  const dispatch = useDispatch();\r\n  const email = useSelector(getUserEmail);\r\n\r\n    const onLogout = useCallback(() => dispatch(logout()), [dispatch]);\r\n\r\n  return (\r\n    <div className=\"UserMenu\">        \r\n        <img src={noAvatar} alt=\"\" width=\"30\" />   \r\n        <span>{email}</span>\r\n        <button type=\"button\" onClick={onLogout} className=\"btn\">Sign out</button>\r\n    </div>   \r\n  )\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport './UserMenu.css'\r\n\r\nconst AuthNav = () => {\r\n    return (\r\n        <ul className=\"navigation\">\r\n            <li> <NavLink\r\n                to={routes.login}\r\n                className=\"NavLink\"\r\n                activeClassName=\"NavLink--active\">\r\n                  <span >\r\n                    Login\r\n                  </span>\r\n                </NavLink>\r\n            </li>\r\n\r\n            <li> <NavLink\r\n                to={routes.register}\r\n                className=\"NavLink\"\r\n                activeClassName=\"NavLink--active\">\r\n                  <span >\r\n                    Register\r\n                  </span>\r\n                </NavLink>\r\n            </li>   \r\n        </ul>\r\n    );   \r\n}\r\n \r\nexport default AuthNav;","import { useSelector } from 'react-redux';\r\n\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\n\r\nimport { getIsAuthenticated } from '../../redux/auth';\r\n\r\nimport './UserMenu.css';\r\n\r\nexport default function AppBar() {\r\n    const isAuthenticated = useSelector(getIsAuthenticated)\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <Navigation />\r\n            {isAuthenticated? <UserMenu />:<AuthNav />}\r\n        </header>\r\n    );\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Suspense, lazy, useEffect } from 'react';\nimport { Redirect, Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport routes from './routes';\n\n\nimport AppBar from './components/UserMenu';\n\nimport { getCurrentUser } from './redux/auth/auth-operations';\n\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components//PublicRoute/PublicRoute';\n\nimport './app.css'\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView' /* webpackChunkName: \"home-view\" */)\n);\n\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /* webpackChunkName: \"contacts-view\" */)\n);\n\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /* webpackChunkName: \"login-view\" */)\n);\n\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /* webpackChunkName: \"register-view\" */)\n);\n\n\nexport default function App() {\n\n  const dispatch = useDispatch();\n\n    useEffect(() => {\n    dispatch(getCurrentUser());\n  }, [dispatch]);\n\n\n  return (\n    <div  className=\"app\">\n      <AppBar />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Switch>\n          <PublicRoute exact path={routes.home} component={HomeView} />\n          <PrivateRoute\n            path={routes.contacts}\n            redirectTo=\"/login\"\n            component={ContactsView}\n          />\n          <PublicRoute\n            path={routes.login}\n            restricted\n            redirectTo=\"/contacts\"\n            component={LoginView}\n          />\n          <PublicRoute\n            path={routes.register}\n            restricted\n            redirectTo=\"/\"\n            component={RegisterView}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n    </div>\n  );\n\n}\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts';\r\nimport authReducer from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n  blacklist: ['filter'],\r\n};\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}